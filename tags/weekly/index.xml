<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>weekly on Kushashwa Ravi Shrimali (Kush)</title>
    <link>https://krshrimali.github.io/tags/weekly/</link>
    <description>Recent content in weekly on Kushashwa Ravi Shrimali (Kush)</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
    <lastBuildDate>Sun, 03 Oct 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://krshrimali.github.io/tags/weekly/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Weekly Progress Report: 03-10-2021, 2</title>
      <link>https://krshrimali.github.io/posts/2021/10/weekly-progress-report-03-10-2021-2/</link>
      <pubDate>Sun, 03 Oct 2021 00:00:00 +0000</pubDate>
      
      <guid>https://krshrimali.github.io/posts/2021/10/weekly-progress-report-03-10-2021-2/</guid>
      <description>
          
            &lt;h4&gt;Weekly Progress Report: 03-10-2021, 2&lt;/h4&gt;
          
          &lt;p&gt;Hi everyone, so this week has been comparatively more productive in terms of learning as well as work! I&amp;rsquo;m happy, so why not share with everyone as well? üéâ&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;PyTorch&lt;/strong&gt;: (ft. Quansight and Facebook)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Started working on porting &lt;code&gt;index_add&lt;/code&gt; to structured kernels, see the PR I made on my forked repo &lt;a href=&#34;https://github.com/krshrimali/pytorch/pull/14&#34;&gt;here&lt;/a&gt;, and on upstream &lt;a href=&#34;https://github.com/pytorch/pytorch/pull/65993&#34;&gt;here&lt;/a&gt;.
&lt;ul&gt;
&lt;li&gt;This included adding an &lt;code&gt;out=&lt;/code&gt; variant to the op.&lt;/li&gt;
&lt;li&gt;Refining the way it&amp;rsquo;s registered in PyTorch. I am thinking to pass defalut value while registering, but it will be a BC breaking change.&lt;/li&gt;
&lt;li&gt;Finally got to use &lt;a href=&#34;https://github.com/ezyang/ghstack.git&#34;&gt;ghstack&lt;/a&gt;, thanks to &lt;a href=&#34;https://github.com/ysiraichi&#34;&gt;Yukio (Quansight)&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Revised derivatives yaml file. Personally I feel that this one needs opinions from the Facebook team, and a lot of changes might be rejected (which is okay, at the end of the day - everything we do should be &lt;em&gt;good&lt;/em&gt; for the library).&lt;/li&gt;
&lt;li&gt;My PR &lt;a href=&#34;https://github.com/pytorch/pytorch/pull/65993&#34;&gt;here&lt;/a&gt; is more like a prototype for everyone to get a chance to review, as well as comment on what they feel.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Structured Kernel porting PR for &lt;code&gt;baddbmm, bmm&lt;/code&gt; has been merged. Yay! üéâ ‚ù§Ô∏è &lt;a href=&#34;https://github.com/pytorch/pytorch/pull/65993&#34;&gt;PR&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Took a walkthrough of lots of autogenerated code in PyTorch, to understand how ops are registered.&lt;/li&gt;
&lt;li&gt;Listened to &lt;a href=&#34;https://open.spotify.com/show/6UzHKeiy368jKfQMKKvJY5&#34;&gt;Ed&amp;rsquo;s podcast&lt;/a&gt; - episode on NVIDIA GPUs. A sweet little introduction to NVIDIA GPUs.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Extras&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Continued reading history of JIT, but couldn&amp;rsquo;t complete it. :sad: Will have to continue reading the next week, find the link &lt;a href=&#34;http://eecs.ucf.edu/~dcm/Teaching/COT4810-Spring2011/Literature/JustInTimeCompilation.pdf&#34;&gt;here&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Effective Modern C++: I finished reading Item 14 of Chapter 3, but couldn&amp;rsquo;t write notes about it. This blog post, I&amp;rsquo;m planning to discuss the intermediate generated code (closer to assembly), so let&amp;rsquo;s see how that goes the next week.&lt;/li&gt;
&lt;li&gt;Learnt a bit about compilers, started reading a book on it.&lt;/li&gt;
&lt;li&gt;Wrote a shell script in case I distro hop a lot, will link on this later once I&amp;rsquo;ve uploaded it.&lt;/li&gt;
&lt;li&gt;Started going through NumPy&amp;rsquo;s source code, just something I&amp;rsquo;m doing for learning.&lt;/li&gt;
&lt;li&gt;Reading about memory overlaps in C.&lt;/li&gt;
&lt;li&gt;BuffetCodes organization was dissolved recently, and the repositories were transferred. Thanks to my friend (Himanshu Singh) on working with me on this, it was a great experience.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I&amp;rsquo;m continuously thinking if writing this is anyway helpful for anyone else, so yes - please do let me know if you like reading these. However, I&amp;rsquo;m enjoying learning and I think that&amp;rsquo;s all that matters. I plan to start new projects very soon, and hopefully that should go good.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Weekly Progress Report: 26-09-2021, 1</title>
      <link>https://krshrimali.github.io/posts/2021/09/weekly-progress-report-26-09-2021-1/</link>
      <pubDate>Sun, 26 Sep 2021 00:00:00 +0000</pubDate>
      
      <guid>https://krshrimali.github.io/posts/2021/09/weekly-progress-report-26-09-2021-1/</guid>
      <description>
          
            &lt;h4&gt;Weekly Progress Report: 26-09-2021, 1&lt;/h4&gt;
          
          &lt;p&gt;Hi everyone, before I go ahead and share my progress, I wanted to quickly talk about what this blog is about.&lt;/p&gt;
&lt;p&gt;I am highly passionate with the idea of high performance computing, optimizing deep learning applications, and solving real world problems using deep learning, computer vision, and speech processing. While I&amp;rsquo;m on this path - I would like to document this somewhere. And while I&amp;rsquo;m doing that, why not share it publicly?&lt;/p&gt;
&lt;p&gt;So here it is, the first weekly update blog on what I&amp;rsquo;ve been upto:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;PyTorch&lt;/strong&gt;: (ft. Quansight and Facebook)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Followed up on &lt;code&gt;batch_norm&lt;/code&gt; &lt;a href=&#34;https://github.com/pytorch/pytorch/pull/63218&#34;&gt;PR&lt;/a&gt;. Merged üéâ&lt;/li&gt;
&lt;li&gt;Structured Kernel porting for &lt;code&gt;baddbmm, bmm&lt;/code&gt; &lt;a href=&#34;https://github.com/pytorch/pytorch/pull/64805&#34;&gt;PR&lt;/a&gt;. Lots of interesting discussions, and should be approved after final round of review. Will have to follow up on this coming week.&lt;/li&gt;
&lt;li&gt;Structured Kernel porting (WIP) for &lt;code&gt;nonzero&lt;/code&gt; &lt;a href=&#34;https://github.com/krshrimali/pytorch/pull/13&#34;&gt;PR&lt;/a&gt;. Putting this on hold, as there is a related PR on this - and it makes more sense to let that one go first, and then start working on this.&lt;/li&gt;
&lt;li&gt;Finished the &lt;code&gt;max_poolNd&lt;/code&gt; &lt;a href=&#34;https://github.com/pytorch/pytorch/pull/62544&#34;&gt;PR&lt;/a&gt;, the PR is approved and will be merged after some time.&lt;/li&gt;
&lt;li&gt;While working on &lt;a href=&#34;https://github.com/pytorch/pytorch/pull/64805&#34;&gt;structured kernel for baddbmm, bmm PR&lt;/a&gt;, we needed to differentiate between in-place and out calls, interestingly - the autogenerated &lt;code&gt;set_output&lt;/code&gt; function was the answer. A good discussion on this is &lt;a href=&#34;https://github.com/pytorch/pytorch/pull/64805#discussion_r710952117&#34;&gt;here&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Took a look at implementation of &lt;code&gt;ArrayRef&lt;/code&gt; class, find the source code &lt;a href=&#34;https://github.com/pytorch/pytorch/blob/master/c10/util/ArrayRef.h#L41&#34;&gt;here&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Extras&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The concept behind JIT is very interesting, and I wanted to read more about it. Started with &lt;a href=&#34;http://eecs.ucf.edu/~dcm/Teaching/COT4810-Spring2011/Literature/JustInTimeCompilation.pdf&#34;&gt;this&lt;/a&gt; article on &amp;ldquo;A Brief History of Just-In-Time&amp;rdquo;. I plan to write a blog on this once I&amp;rsquo;m done reading.&lt;/li&gt;
&lt;li&gt;Effective Modern C++: I continued reading through Item 12 and Item 13 of Chapter 3:
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://krshrimali.github.io/posts/2021/09/declaring-overriding-functions-override-notes/&#34;&gt;Declaring Overriding Functions override&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://krshrimali.github.io/posts/2021/09/prefer-const_iterators-to-iterators-notes/&#34;&gt;Prefer const_iterators to iterators&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;A very interesting blog on &lt;code&gt;vmap&lt;/code&gt; and &lt;code&gt;pmap&lt;/code&gt; in Jax is &lt;a href=&#34;https://www.kaggle.com/aakashnain/tf-jax-tutorials-part-8-vmap-pmap&#34;&gt;here&lt;/a&gt;. Read half of it, will continue reading in the next week.&lt;/li&gt;
&lt;li&gt;An interesting watch on &lt;a href=&#34;https://www.youtube.com/watch?v=b9_0bqrm2G8&#34;&gt;When do I use a union in C or C++, instead of a struct?&lt;/a&gt;. I like watching such videos when I&amp;rsquo;m a little tired from work.&lt;/li&gt;
&lt;li&gt;Blog theme:
&lt;ul&gt;
&lt;li&gt;Worked on a new theme inspired by &lt;a href=&#34;https://github.com/haoZeke/hugo-theme-hello-friend-ng-hz/&#34;&gt;this theme&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Re-organized the blog, fixed all the links (wherever it&amp;rsquo;s shared on the internet), in-blog images and cover images as well. Check the milestone &lt;a href=&#34;https://github.com/krshrimali/krshrimali.github.io/milestone/1&#34;&gt;here&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;With this blog, the milestone for the blog will be closed. üéâ&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Started reading tutorial on PyTorch&amp;rsquo;s official docs about &lt;a href=&#34;https://pytorch.org/tutorials/advanced/dispatcher.html&#34;&gt;Returning a Dispatched Operator in C++&lt;/a&gt;. Half way through, will continue reading in the next week.&lt;/li&gt;
&lt;li&gt;Contribution to &lt;a href=&#34;https://github.com/pystiche/pystiche/&#34;&gt;pystiche&lt;/a&gt;, attempting to suppress deprecation warnings produced by pystiche module. &lt;a href=&#34;https://github.com/pystiche/pystiche/pull/566&#34;&gt;PR&lt;/a&gt;, a few review comments to address otherwise should look good.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Yes, and apart from all of this, I did won a few games of CSGO with my friends, had a few health issues to catch up with (üò¢), updated my &lt;a href=&#34;https://discord.gg/5tXuYANP7R&#34;&gt;discord channel&lt;/a&gt; with blog announcements, helped a few friends with their doubts, and well, yeah that&amp;rsquo;s it.&lt;/p&gt;
&lt;p&gt;I hope to perform better once I feel good (w.r.t health). Thank you for reading.&lt;/p&gt;

      </description>
    </item>
    
  </channel>
</rss>
